// Code generated by goa v3.0.4, DO NOT EDIT.
//
// some-function gRPC client
//
// Command:
// $ goa gen github.com/seriwb/front-bff-msa/msa/design

package client

import (
	"context"

	some_functionpb "github.com/seriwb/front-bff-msa/msa/gen/grpc/some_function/pb"
	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
	"google.golang.org/grpc"
)

// Client lists the service endpoint gRPC clients.
type Client struct {
	grpccli some_functionpb.SomeFunctionClient
	opts    []grpc.CallOption
}

// NewClient instantiates gRPC client for all the some-function service servers.
func NewClient(cc *grpc.ClientConn, opts ...grpc.CallOption) *Client {
	return &Client{
		grpccli: some_functionpb.NewSomeFunctionClient(cc),
		opts:    opts,
	}
}

// Add calls the "Add" function in some_functionpb.SomeFunctionClient interface.
func (c *Client) Add() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildAddFunc(c.grpccli, c.opts...),
			EncodeAddRequest,
			DecodeAddResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			return nil, goa.Fault(err.Error())
		}
		return res, nil
	}
}
