// Code generated by goa v3.0.4, DO NOT EDIT.
//
// some-function gRPC server encoders and decoders
//
// Command:
// $ goa gen github.com/seriwb/front-bff-msa/msa/design

package server

import (
	"context"

	some_functionpb "github.com/seriwb/front-bff-msa/msa/gen/grpc/some_function/pb"
	somefunction "github.com/seriwb/front-bff-msa/msa/gen/some_function"
	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc/metadata"
)

// EncodeAddResponse encodes responses from the "some-function" service "add"
// endpoint.
func EncodeAddResponse(ctx context.Context, v interface{}, hdr, trlr *metadata.MD) (interface{}, error) {
	result, ok := v.(int)
	if !ok {
		return nil, goagrpc.ErrInvalidType("some-function", "add", "int", v)
	}
	resp := NewAddResponse(result)
	return resp, nil
}

// DecodeAddRequest decodes requests sent to "some-function" service "add"
// endpoint.
func DecodeAddRequest(ctx context.Context, v interface{}, md metadata.MD) (interface{}, error) {
	var (
		message *some_functionpb.AddRequest
		ok      bool
	)
	{
		if message, ok = v.(*some_functionpb.AddRequest); !ok {
			return nil, goagrpc.ErrInvalidType("some-function", "add", "*some_functionpb.AddRequest", v)
		}
	}
	var payload *somefunction.AddPayload
	{
		payload = NewAddPayload(message)
	}
	return payload, nil
}
